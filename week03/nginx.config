server {
    listen 80;
    server_name project-1-xx;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name project-1-xx;
    ssl_certificate /etc/nginx/ssl/dept-wildcard.eduhk/fullchain.crt;
    ssl_certificate_key /etc/nginx/ssl/dept-wildcard.eduhk/dept-wildcard.eduhk.hk.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    ssl_trusted_certificate /etc/nginx/ssl/dept-wildcard.eduhk/fullchain.crt;

    # 新增：转发所有/api开头的请求到3001端口（无需修改前端代码）
#    location /api/ {
#        proxy_pass http://127.0.0.1:3001/api/;
#        proxy_set_header Host $host;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#        proxy_set_header X-Forwarded-Proto $scheme;
#    }

    # Default site root (customize if needed)
    root /var/www/html;
    index index.html index.htm;
    location / {
       try_files $uri $uri/ =404;
    }

# Chatbot 01 - 配置（纯后端服务，前端由后端提供）
location /chatbot01/ {
    proxy_pass http://127.0.0.1:3000/;  # 转发到本地 3000 端口
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_redirect off;
}

# 处理不带斜杠的访问
location = /chatbot01 {
    return 301 /chatbot01/;
}

# Chatbot 02 - Environment Variables Demo
 location /chatbot02/ {
 proxy_pass http://127.0.0.1:3001/;
 proxy_set_header Host $host;
 proxy_set_header X-Real-IP $remote_addr;
 proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
 proxy_set_header X-Forwarded-Proto $scheme;
 proxy_redirect off;
 }

# Chatbot 03 - CORS Configuration Demo
 location /chatbot03/ {
 proxy_pass http://127.0.0.1:3002/;
 proxy_set_header Host $host;
 proxy_set_header X-Real-IP $remote_addr;
 proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
 proxy_set_header X-Forwarded-Proto $scheme;
 proxy_redirect off;
 }

# Chatbot 04 - 最简配置
# 1. 前端页面由 Nginx 直接提供
# 匹配不带斜杠的访问
location = /chatbot04 {
    return 301 /chatbot04/;
}

# 匹配带斜杠的访问
location /chatbot04/ {
    alias /home/proj07/project-1-xx/chatbot_04_MVPPython/;
    index index.html;
    try_files $uri $uri/ /chatbot04/index.html;
}

# Chatbot 04 - Python FastAPI Demo
 location /chatbot04/chat/completions {
 proxy_pass http://127.0.0.1:8001/chat/completions;
 proxy_set_header Host $host;
 proxy_set_header X-Real-IP $remote_addr;
 proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
 proxy_set_header X-Forwarded-Proto $scheme;
 proxy_redirect off;
 # Important for streaming responses
 proxy_buffering off;
 proxy_cache off;
 proxy_set_header Connection '';
 proxy_http_version 1.1;
 chunked_transfer_encoding off;
 }

 # Chatbot 05 - Full-Stack React TypeScript

# 解决资源路径问题：将根目录的 /assets 请求转发到 chatbot05 的 assets 目录
 rewrite ^/assets/(.*)$ /chatbot05/assets/$1 last;

 location /chatbot05/ {
 alias /var/www/html/chatbot05/;
 try_files $uri $uri/ /chatbot05/index.html;
 index index.html;
 }

# 额外添加 assets 目录的映射（确保子目录文件能被访问）
location /chatbot05/assets/ {
    alias /var/www/html/chatbot05/assets/;
}

 # API routes for chatbot 05 backend
 location /api/v2/ {
 proxy_pass http://127.0.0.1:8002/;
 proxy_set_header Host $host;
 proxy_set_header X-Real-IP $remote_addr;
 proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
 proxy_set_header X-Forwarded-Proto $scheme;
 proxy_redirect off;
 # Enable streaming
 proxy_buffering off;
 proxy_cache off;
 proxy_set_header Connection '';
 proxy_http_version 1.1;
 chunked_transfer_encoding off;
 }

}